;; Preferences
(setq comint-prompt-read-only t)
(setq inhibit-splash-screen t)
(setq-default indent-tabs-mode nil)
(tool-bar-mode -1)
(column-number-mode t)
(display-time-mode t)
(scroll-bar-mode (quote right))
(show-paren-mode t)

;; Mac specific

;; Give me a hash key on UK keyboard
(fset 'insert-hash "#")
(global-set-key (kbd "M-3") 'insert-hash)

;; Use command key as meta
(setq mac-command-modifier 'meta)
(setq mac-option-modifier 'super)

;; My key mappings
(defvar my-keys-minor-mode-map (make-keymap) "my-keys-minor-mode keymap.")

(define-key my-keys-minor-mode-map (kbd "C-;") 'completion-at-point)

(define-minor-mode my-keys-minor-mode
  "A minor mode so that my key settings override annoying major modes."
  t " my-keys" 'my-keys-minor-mode-map)

(my-keys-minor-mode 1)


(global-set-key [M-left] 'windmove-left)
(global-set-key [M-right] 'windmove-right)
(global-set-key [M-up] 'windmove-up)
(global-set-key [M-down] 'windmove-down)

;; RoR

;; Use css-mode for scss files
(add-to-list 'auto-mode-alist '("\\.scss" . css-mode))


;; yasnippet
(add-to-list 'load-path "~/.emacs.d/yasnippet")
(require 'yasnippet)
(yas-global-mode 1)

(require 'generic-x)

;; Groovy
(defvar groovy-tab-width 2)

(defun groovy-keywords ()
  '("for" "class" "in" "any" "this" "super" "new" "def" "import" "if"))

(defun groovy-font-lock-defaults ()
  `((,(regexp-opt (groovy-keywords) 'words))
    nil
    nil
    nil
    nil
    ))

(defun groovy-indent-line ()
  "Indent current line for `groovy-mode'."
  (interactive)
  (let ((indent-col 0))
    (save-excursion
      (beginning-of-line)
      (condition-case nil
          (while t
            (backward-up-list 1)
            (when (looking-at "[[{]")
              (setq indent-col (+ indent-col groovy-tab-width))))
        (error nil)))
    (save-excursion
      (back-to-indentation)
      (when (and (looking-at "[]}]") (>= indent-col groovy-tab-width))
        (setq indent-col (- indent-col groovy-tab-width))))
    (indent-line-to indent-col)))

(define-derived-mode groovy-mode fundamental-mode "Groovy script"
  "Groovy mode is a major mode for editing groovy scripts"
  
  (setq font-lock-defaults (groovy-font-lock-defaults))

  (when groovy-tab-width
    (setq tab-width groovy-tab-width))

  (setq comment-start "//")
  (setq comment-end "")

  (setq indent-line-function 'groovy-indent-line)

  (modify-syntax-entry ?/ "< 2b" groovy-mode-syntax-table)
  (modify-syntax-entry ?\n "> b" groovy-mode-syntax-table)
  (modify-syntax-entry ?' "\"" groovy-mode-syntax-table)
  
)


(add-to-list 'auto-mode-alist '("\\.groovy$" . groovy-mode))
(add-to-list 'auto-mode-alist '("\\.gradle$" . groovy-mode))

;; Puppet
(load-file "~/.emacs.d/puppet-mode.el")
(require 'puppet-mode)


(set-face-attribute 'default nil :height 110)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-enabled-themes (quote (deeper-blue))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
